{"version":3,"sources":["GlobalStyles.styled.js","components/Card/Card.styled.js","components/Card/Card.component.jsx","components/CardsContainer/CardsContainer.styled.js","components/CardsContainer/CardsContainer.component.jsx","components/Toggle/Toggle.styled.js","components/Toggle/Toggle.component.jsx","components/Header/Header.styled.js","components/Header/Header.component.jsx","components/App/App.component.jsx","index.js"],"names":["GlobalStyles","createGlobalStyle","CardContent","styled","div","CardLink","button","CardImage","props","src","Typography","p","CardBody","Card","item","snippet","thumbnails","default","url","as","title","description","Container","CardsContainer","data","items","map","id","kind","key","videoId","ToggleContainer","ToggleSwitch","label","SliderRound","span","dark","Toggle","text","checked","setChecked","type","onChange","e","target","Navbar","nav","Menu","ul","MenuItem","li","Spacer","Form","form","ButtonIconInput","ButtonIcon","TextField","input","HiddenDown","on","Header","useState","search","setSearch","className","onSubmit","event","preventDefault","placeholder","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83a43ac4.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n    body{\n        margin: 0;\n        padding: 0;\n        font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n    }\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        list-style: none;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const CardContent = styled.div`\n  width: 345px;\n  min-height: 345px;\n  margin: 10px;\n  border-radius: 4px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const CardLink = styled.button`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: transparent;\n  cursor: pointer;\n  border: 0;\n  outline: 0;\n`;\n\nexport const CardImage = styled.div`\n  display: block;\n  width: 100%;\n  height: 140px;\n  background-image: url(${(props) => props.src});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nexport const Typography = styled.p`\n  text-align: left;\n  margin-bottom: 0.35em;\n`;\n\nexport const CardBody = styled.div`\n  padding: 16px;\n`;\n","import React from 'react';\nimport { CardBody, CardContent, CardImage, CardLink, Typography } from './Card.styled';\n\nexport const Card = ({ item }) => {\n  return (\n    <CardContent>\n      <CardLink>\n        <CardImage src={item.snippet.thumbnails.default.url} />\n        <CardBody>\n          <Typography as=\"h2\">{item.snippet.title}</Typography>\n          <Typography as=\"p\">{item.snippet.description}</Typography>\n        </CardBody>\n      </CardLink>\n    </CardContent>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n\n  > div {\n    width: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    /* padding: 20px; */\n    margin: 0px auto;\n    box-sizing: border-box;\n\n    @media only screen and (min-width: 0px) {\n      width: 100%;\n      justify-content: center;\n    }\n    @media only screen and (min-width: 770px) {\n      width: 770px;\n    }\n    @media only screen and (min-width: 1135px) {\n      width: 1135px;\n    }\n    @media only screen and (min-width: 1500px) {\n      width: 1500px;\n    }\n  }\n`;\n\nexport const Typography = styled.p`\n  text-align: center;\n  font-size: 3.75rem;\n  font-weight: 300;\n  line-height: 1.2;\n  letter-spacing: -0.00833em;\n  padding: 12px;\n  padding-top: 30px;\n`;\n","import React from 'react';\nimport data from '../../mocks/youtube.json';\nimport { Card } from '../Card/Card.component';\nimport { Container, Typography } from './CardsContainer.styled';\n\nexport const CardsContainer = () => {\n  return (\n    <Container>\n      <Typography as=\"h2\">Welcome to the Challenge!</Typography>\n      <div>\n        {data.items.map(\n          (item) =>\n            item.id.kind === 'youtube#video' && <Card key={item.id.videoId} item={item} />\n        )}\n      </div>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ToggleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n`;\n\nexport const ToggleSwitch = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 50px;\n  height: 25px;\n\n  > input {\n    display: none;\n  }\n`;\n\nexport const SliderRound = styled.span`\n  position: absolute;\n  cursor: pointer;\n  background-color: #ccc;\n  border-radius: 25px;\n  top: 5px;\n  bottom: 5px;\n  right: 0;\n  left: 0;\n  transition: background-color 0.2s ease;\n\n  ${({ dark }) => dark && `background-color: #000;`}\n\n  &:before {\n    position: absolute;\n    content: '';\n    left: 0;\n    top: -5px;\n    width: 25px;\n    height: 25px;\n    background-color: #fff;\n    border-radius: 50%;\n    transition: transform 0.3s ease;\n\n    ${({ dark }) => dark && `transform: translateX(25px);`}\n  }\n`;\n\nexport const Typography = styled.p`\n  margin-left: 10px;\n`;\n","import React from 'react';\nimport { SliderRound, ToggleContainer, ToggleSwitch, Typography } from './Toggle.styled';\n\nexport const Toggle = ({ text, checked, setChecked }) => {\n  return (\n    <ToggleContainer>\n      <ToggleSwitch>\n        <input\n          type=\"checkbox\"\n          checked={checked}\n          onChange={(e) => setChecked(e.target.checked)}\n        />\n        <SliderRound dark={checked} />\n      </ToggleSwitch>\n      <Typography>{text}</Typography>\n    </ToggleContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Navbar = styled.nav`\n  background-color: #1c5476;\n`;\n\nexport const Menu = styled.ul`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-left: 24px;\n  padding-right: 24px;\n  min-height: 64px;\n`;\n\nexport const MenuItem = styled.li`\n  padding: 12px;\n  cursor: pointer;\n  height: 100%;\n\n  > i {\n    color: #fff;\n    font-size: 1.5rem;\n    margin-right: 16px;\n  }\n`;\n\nexport const Spacer = styled.div`\n  flex: 1;\n`;\n\nexport const Form = styled.form`\n  width: 248px;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  position: relative;\n  background-color: rgba(255, 255, 255, 0.15);\n  height: 35px;\n  border-radius: 4px;\n`;\n\nexport const ButtonIconInput = styled.button`\n  position: absolute;\n  left: 0;\n  height: 100%;\n  background: transparent;\n  padding: 0px 16px;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 0;\n\n  > i {\n    width: 16px;\n    height: auto;\n  }\n`;\n\nexport const ButtonIcon = styled.button`\n  height: 48px;\n  width: 48px;\n  border-radius: 50%;\n  background: transparent;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 0;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.15);\n  }\n`;\n\nexport const TextField = styled.input`\n  position: absolute;\n  left: 48px;\n  top: 0;\n  outline: 0;\n  color: inherit;\n  color: #fff;\n  background: transparent;\n  width: 200px;\n  height: 100%;\n  border: 0;\n  font-size: 16px;\n`;\n\nexport const HiddenDown = styled.div`\n  @media only screen and (max-width: 600px) {\n    ${({ on }) => {\n      if (on === 'sm') return `display: none; background: red;`;\n    }}\n  }\n  @media only screen and (max-width: 960px) {\n    ${({ on }) => {\n      if (on === 'md') return `display: none; background: green;`;\n    }}\n  }\n  @media only screen and (max-width: 1280px) {\n    ${({ on }) => {\n      if (on === 'lg') return `display: none; background: yellow;`;\n    }}\n  }\n`;\n","import React, { useState } from 'react';\nimport { Toggle } from '../Toggle/Toggle.component';\nimport {\n  ButtonIcon,\n  ButtonIconInput,\n  Form,\n  HiddenDown,\n  Menu,\n  MenuItem,\n  Navbar,\n  Spacer,\n  TextField,\n} from './Header.styled';\n\nexport const Header = () => {\n  const [search, setSearch] = useState('wizeline');\n  const [checked, setChecked] = useState(true);\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <Navbar>\n      <Menu>\n        <MenuItem>\n          <ButtonIcon>\n            <i className=\"fas fa-bars fa-lg\" />\n          </ButtonIcon>\n        </MenuItem>\n        <MenuItem>\n          <Form onSubmit={handleSearch}>\n            <ButtonIconInput type=\"submit\">\n              <i className=\"fas fa-search fa-lg\" />\n            </ButtonIconInput>\n            <TextField\n              placeholder=\"Search\"\n              type=\"text\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n            />\n          </Form>\n        </MenuItem>\n        <Spacer />\n        <HiddenDown on=\"md\">\n          <MenuItem>\n            <Toggle text=\"Dark mode\" checked={checked} setChecked={setChecked} />\n          </MenuItem>\n        </HiddenDown>\n        <HiddenDown on=\"md\">\n          <MenuItem>\n            <ButtonIcon>\n              <i className=\"fas fa-user-circle fa-3x\" />\n            </ButtonIcon>\n          </MenuItem>\n        </HiddenDown>\n      </Menu>\n    </Navbar>\n  );\n};\n","import React from 'react';\n\nimport { GlobalStyles } from '../../GlobalStyles.styled';\nimport { CardsContainer } from '../CardsContainer/CardsContainer.component';\nimport { Header } from '../Header/Header.component';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Header />\n      <CardsContainer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}